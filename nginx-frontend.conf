server {
    listen 80;
    server_name 192.168.0.7 zeus.kronos.cloudns.ph localhost;
    root /usr/share/nginx/html;
    index index.html auto.html;

    # Configuração para upload de arquivos grandes
    client_max_body_size 50M;
    client_body_timeout 300s;
    client_header_timeout 300s;

    # Página principal - aplicación unificada
    location = / {
        try_files /index.html =404;
    }

    # Aplicación unificada como página principal
    location / {
        try_files $uri $uri/ /index.html;
        # Headers para desenvolvimento - desabilitar cache
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Interfaz desktop - servir desde la raíz con los nuevos archivos
    location /desktop/ {
        alias /usr/share/nginx/html/;
        try_files $uri $uri/ /index.html;
        index index.html;
    }

    # Interfaz móvil - mobile folder  
    location /mobile/ {
        alias /usr/share/nginx/html/mobile/;
        try_files $uri $uri/ /mobile/index.html;
        index index.html;
    }

    # Para manejar requests sin trailing slash
    location /mobile {
        return 301 /mobile/;
    }

    # Favicon redirection
    location /favicon.ico {
        try_files /favicon.svg =404;
    }

    # Configuración para archivos estáticos
    location ~* \.(css|png|jpg|jpeg|gif|ico|svg|json)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # JS files - no cache para desenvolvimento
    location ~* \.js$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        access_log off;
    }

    # Proxy para API del backend - HABILITADO: nginx maneja las peticiones API internamente
    location /api/ {
        proxy_pass http://alugueis_backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts para upload de arquivos
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Headers CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Headers de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
